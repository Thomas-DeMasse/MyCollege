tdemasse@cs1:~/Thomas_DeMasse_hw6$ make
gcc -ansi -o linker linker.c
tdemasse@cs1:~/Thomas_DeMasse_hw6$ make run
./NewMasm -o < main.asm > main.obj
./NewMasm -o < xbsywt.asm > xbsywt.obj
./NewMasm -o < rbsywt.asm > rbsywt.obj
./NewMasm -o < readint.asm > readint.obj
./NewMasm -o < writeint.asm > writeint.obj
./NewMasm -o < addints.asm > addints.obj
./NewMasm -o < writestr.asm > writestr.obj
./linker main.obj xbsywt.obj rbsywt.obj readint.obj writeint.obj addints.obj writestr.obj > main.exe
./mic1 NewPromFile.dat main.exe 0 2048

Read in 145 micro instructions
Read in 264 machine instructions
Starting PC is : 0000000000000000  base 10:       0
Starting SP is : 0000100000000000  base 10:    2048

Enter a 1-5 digit number followed by enter:
235
Enter a 1-5 digit number followed by enter:
0
The sum of these numbers is:
235

ProgramCounter : 0000000000010100  base 10:      20
Accumulator    : 0000000000000000  base 10:       0
InstructionReg : 1111111111000000  base 10:   65472
TempInstr      : 1100000000000000  base 10:   49152
StackPointer   : 0000100000000000  base 10:    2048
ARegister      : 1111111111110101  base 10:   65525
BRegister      : 1111111111110110  base 10:   65526
CRegister      : 0000000000000000  base 10:       0
DRegister      : 0000000000000000  base 10:       0
ERegister      : 0000000000001010  base 10:      10
FRegister      : 0000000000000000  base 10:       0

Total cycles   : 8344787

Type decimal address to view memory,  q  to quit or  c  to continue:



tdemasse@cs1:~/Thomas_DeMasse_hw6$ make run
./NewMasm -o < main.asm > main.obj
./NewMasm -o < xbsywt.asm > xbsywt.obj
./NewMasm -o < rbsywt.asm > rbsywt.obj
./NewMasm -o < readint.asm > readint.obj
./NewMasm -o < writeint.asm > writeint.obj
./NewMasm -o < addints.asm > addints.obj
./NewMasm -o < writestr.asm > writestr.obj
./linker main.obj xbsywt.obj rbsywt.obj readint.obj writeint.obj addints.obj writestr.obj > main.exe
./mic1 NewPromFile.dat main.exe 0 2048

Read in 145 micro instructions
Read in 264 machine instructions
Starting PC is : 0000000000000000  base 10:       0
Starting SP is : 0000100000000000  base 10:    2048

Enter a 1-5 digit number followed by enter:
16341
Enter a 1-5 digit number followed by enter:
957
The sum of these numbers is:
17298

ProgramCounter : 0000000000010100  base 10:      20
Accumulator    : 0000000000000000  base 10:       0
InstructionReg : 1111111111000000  base 10:   65472
TempInstr      : 1100000000000000  base 10:   49152
StackPointer   : 0000100000000000  base 10:    2048
ARegister      : 1111111111110101  base 10:   65525
BRegister      : 1111111111110110  base 10:   65526
CRegister      : 0000000000000000  base 10:       0
DRegister      : 0000000000000000  base 10:       0
ERegister      : 0000000000001010  base 10:      10
FRegister      : 0000000000000000  base 10:       0

Total cycles   : 3922111

Type decimal address to view memory,  q  to quit or  c  to continue:



tdemasse@cs1:~/Thomas_DeMasse_hw6$ make run
./NewMasm -o < main.asm > main.obj
./NewMasm -o < xbsywt.asm > xbsywt.obj
./NewMasm -o < rbsywt.asm > rbsywt.obj
./NewMasm -o < readint.asm > readint.obj
./NewMasm -o < writeint.asm > writeint.obj
./NewMasm -o < addints.asm > addints.obj
./NewMasm -o < writestr.asm > writestr.obj
./linker main.obj xbsywt.obj rbsywt.obj readint.obj writeint.obj addints.obj writestr.obj > main.exe
./mic1 NewPromFile.dat main.exe 0 2048

Read in 145 micro instructions
Read in 264 machine instructions
Starting PC is : 0000000000000000  base 10:       0
Starting SP is : 0000100000000000  base 10:    2048

Enter a 1-5 digit number followed by enter:
23786
Enter a 1-5 digit number followed by enter:
12400
overflow, no sum possible!

ProgramCounter : 0000000000101110  base 10:      46
Accumulator    : 1111111111111111  base 10:   65535
InstructionReg : 1111111111000000  base 10:   65472
TempInstr      : 1100000000000000  base 10:   49152
StackPointer   : 0000100000000000  base 10:    2048
ARegister      : 1111111111110101  base 10:   65525
BRegister      : 0000001111111100  base 10:    1020
CRegister      : 1111111111111111  base 10:   65535
DRegister      : 0011000001110000  base 10:   12400
ERegister      : 0000000000000000  base 10:       0
FRegister      : 0000000000000000  base 10:       0

Total cycles   : 2631674

Type decimal address to view memory,  q  to quit or  c  to continue:


tdemasse@cs1:~/Thomas_DeMasse_hw6$ make run
./NewMasm -o < main.asm > main.obj
./NewMasm -o < xbsywt.asm > xbsywt.obj
./NewMasm -o < rbsywt.asm > rbsywt.obj
./NewMasm -o < readint.asm > readint.obj
./NewMasm -o < writeint.asm > writeint.obj
./NewMasm -o < addints.asm > addints.obj
./NewMasm -o < writestr.asm > writestr.obj
./linker main.obj xbsywt.obj rbsywt.obj readint.obj writeint.obj addints.obj writestr.obj > main.exe
./mic1 NewPromFile.dat main.exe 0 2048

Read in 145 micro instructions
Read in 264 machine instructions
Starting PC is : 0000000000000000  base 10:       0
Starting SP is : 0000100000000000  base 10:    2048

Enter a 1-5 digit number followed by enter:
12
Enter a 1-5 digit number followed by enter:
23
The sum of these numbers is:
35

ProgramCounter : 0000000000010100  base 10:      20
Accumulator    : 0000000000000000  base 10:       0
InstructionReg : 1111111111000000  base 10:   65472
TempInstr      : 1100000000000000  base 10:   49152
StackPointer   : 0000100000000000  base 10:    2048
ARegister      : 1111111111110101  base 10:   65525
BRegister      : 1111111111110110  base 10:   65526
CRegister      : 0000000000000000  base 10:       0
DRegister      : 0000000000000000  base 10:       0
ERegister      : 0000000000001010  base 10:      10
FRegister      : 0000000000000000  base 10:       0

Total cycles   : 1172222

Type decimal address to view memory,  q  to quit or  c  to continue:


tdemasse@cs1:~/Thomas_DeMasse_hw6$ make run
./NewMasm -o < main.asm > main.obj
./NewMasm -o < xbsywt.asm > xbsywt.obj
./NewMasm -o < rbsywt.asm > rbsywt.obj
./NewMasm -o < readint.asm > readint.obj
./NewMasm -o < writeint.asm > writeint.obj
./NewMasm -o < addints.asm > addints.obj
./NewMasm -o < writestr.asm > writestr.obj
./linker main.obj xbsywt.obj rbsywt.obj readint.obj writeint.obj addints.obj writestr.obj > main.exe
./mic1 NewPromFile.dat main.exe 0 2048

Read in 145 micro instructions
Read in 264 machine instructions
Starting PC is : 0000000000000000  base 10:       0
Starting SP is : 0000100000000000  base 10:    2048

Enter a 1-5 digit number followed by enter:
1
Enter a 1-5 digit number followed by enter:
1343
The sum of these numbers is:
1344

ProgramCounter : 0000000000010100  base 10:      20
Accumulator    : 0000000000000000  base 10:       0
InstructionReg : 1111111111000000  base 10:   65472
TempInstr      : 1100000000000000  base 10:   49152
StackPointer   : 0000100000000000  base 10:    2048
ARegister      : 1111111111110101  base 10:   65525
BRegister      : 1111111111110110  base 10:   65526
CRegister      : 0000000000000000  base 10:       0
DRegister      : 0000000000000000  base 10:       0
ERegister      : 0000000000001010  base 10:      10
FRegister      : 0000000000000000  base 10:       0

Total cycles   : 1751020

Type decimal address to view memory,  q  to quit or  c  to continue:

/////////////////dump///////////////////////////////////////////////////////////
tdemasse@cs1:~/Thomas_DeMasse_hw6$ make dump
./NewMasm -o < main.asm > main.obj
./NewMasm -o < xbsywt.asm > xbsywt.obj
./NewMasm -o < rbsywt.asm > rbsywt.obj
./NewMasm -o < readint.asm > readint.obj
./NewMasm -o < writeint.asm > writeint.obj
./NewMasm -o < addints.asm > addints.obj
./NewMasm -o < writestr.asm > writestr.obj
./linker -o main.obj xbsywt.obj rbsywt.obj readint.obj writeint.obj writestr.obj
  0 U0000000000000000 on:
  1 0001111111111111
  2 U1110000000000000 xbsywt:
  3 U0111000000000000 inputString:
  4 U1110000000000000 nextw:
  5 U1110000000000000 getInput:
  6 U0000000000000000 binum:
  7 U0001000000000000 sum:
  8 U0111000000000000 inputString:
  9 U1110000000000000 nextw:
  10 U1110000000000000 getInput:
  11 U0000000000000000 binum:
  12 U0010000000000000 sum:
  13 U0001000000000000 sum:
  14 U1100000000000000 overflow:
  15 U0111000000000000 resultString:
  16 U1110000000000000 nextw:
  17 U1110000000000000 convert:
  18 U0000000000000000 zero:
  19 1111111111000000
  20 U0000000000000000 on:
  21 0001111111111101
  22 U1110000000000000 rbsywt:
  23 0000111111111100
  24 U0011000000000000 numoff:
  25 1111010000000000
  26 U1110000000000000 rbsywt:
  27 0000111111111100
  28 U0001000000000000 nxtchr:
  29 U0011000000000000 nl:
  30 U0101000000000000 endnum:
  31 1111111100001010
  32 U0000000000000000 nxtchr:
  33 U0011000000000000 numoff:
  34 1010000000000000
  35 1001000000000000
  36 U0110000000000000 nxtdig:
  37 1111011000000000
  38 U0001000000000000 binum:
  39 0000111111111100
  40 0111000000000000
  41 1111100000000000
  42 U0111000000000000 errorString:
  43 U1110000000000000 nextw:
  44 U0000000000000000 neg1:
  45 1111111111000000
  46 U0000000000000000 on:
  47 0001111111111111
  48 U0000000000000000 neg1:
  49 1111010000000000
  50 U0000000000000000 mask:
  51 1111010000000000
  52 U0110000000000000 answer:
  53 U0000000000000000 sum:
  54 U0101000000000000 start:
  55 U0000000000000000 mask:
  56 1111010000000000
  57 U0000000000000000 sum:
  58 1111010000000000
  59 1111111110000000
  60 1111011000000000
  61 U0001000000000000 sum:
  62 1111011000000000
  63 1111110000000010
  64 U0010000000000000 numoff:
  65 1111010000000000
  66 U0110000000000000 answer:
  67 1111011000000000
  68 U1100000000000000 done:
  69 0001111111111110
  70 U1110000000000000 xbsywt:
  71 U0110000000000000 start:
  72 1111000000000000
  73 U0010000000000000 one:
  74 U0001000000000000 str:
  75 1111011000000000
  76 U0101000000000000 crnl:
  77 0001111111111110
  78 1111010000000000
  79 U0011000000000000 c255:
  80 U1100000000000000 crnl:
  81 U1110000000000000 sb:
  82 1111110000000001
  83 1111010000000000
  84 U1110000000000000 xbsywt:
  85 1111011000000000
  86 0001111111111110
  87 U1110000000000000 xbsywt:
  88 U0000000000000000 str:
  89 U0110000000000000 nextw:
  90 U0000000000000000 cr:
  91 0001111111111110
  92 U1110000000000000 xbsywt:
  93 U0000000000000000 nl:
  94 0001111111111110
  95 U1110000000000000 xbsywt:
  96 1111100000000000
  97 0000111111111111
  98 U0011000000000000 mask:
  99 U1100000000000000 xbsywt:
  100 1111100000000000
  101 0000111111111101
  102 U0011000000000000 mask:
  103 U1100000000000000 rbsywt:
  104 1111100000000000
  105 0111000000001000
  106 U0101000000000000 finish:
  107 U0011000000000000 one:
  108 U0001000000000000 lpcnt:
  109 1000000000000001
  110 U1100000000000000 add1:
  111 1010000000000001
  112 1001000000000001
  113 U0000000000000000 lpcnt:
  114 U0110000000000000 loop1:
  115 1010000000000001
  116 U0010000000000000 one:
  117 1001000000000001
  118 U0000000000000000 lpcnt:
  119 U0110000000000000 loop1:
  120 1000000000000001
  121 1111100000000000
  122 1111100000000000
  123 0110111001000101
  124 0110010101110100
  125 0010000001110010
  126 0010000001100001
  127 0010110100110001
  128 0010000000110101
  129 0110100101100100
  130 0110100101100111
  131 0010000001110100
  132 0111010101101110
  133 0110001001101101
  134 0111001001100101
  135 0110011000100000
  136 0110110001101111
  137 0110111101101100
  138 0110010101110111
  139 0010000001100100
  140 0111100101100010
  141 0110010100100000
  142 0111010001101110
  143 0111001001100101
  144 0010000000111010
  145 0000000000000000
  146 0110100001010100
  147 0010000001100101
  148 0111010101110011
  149 0010000001101101
  150 0110011001101111
  151 0111010000100000
  152 0110010101101000
  153 0110010101110011
  154 0110111000100000
  155 0110110101110101
  156 0110010101100010
  157 0111001101110010
  158 0110100100100000
  159 0011101001110011
  160 0000000000000000
  161 0111011001101111
  162 0111001001100101
  163 0110110001100110
  164 0111011101101111
  165 0010000000101100
  166 0110111101101110
  167 0111001100100000
  168 0110110101110101
  169 0111000000100000
  170 0111001101101111
  171 0110100101110011
  172 0110110001100010
  173 0010000101100101
  174 0000000000000000
  175 1111111111111111
  176 0000000000000000
  177 0000000000000001
  178 0000000000110000
  179 0000000011111111
  180 0000000000000000
  181 0000000000000000
  182 0000000000000000
  183 0000000000000000
  184 0000000000000000
  185 0000000000001000
  186 0000000000001010
  187 0000000000001010
  188 0000000000001101
  189 0000111111111111
  190 U0011000000000000 mask:
  191 U1100000000000000 xbsywt:
  192 1111100000000000
  193 0000111111111101
  194 U0011000000000000 mask:
  195 U1100000000000000 rbsywt:
  196 1111100000000000
  197 U0000000000000000 on:
  198 0001111111111101
  199 U1110000000000000 rbsywt:
  200 0000111111111100
  201 U0011000000000000 numoff:
  202 1111010000000000
  203 U1110000000000000 rbsywt:
  204 0000111111111100
  205 U0001000000000000 nxtchr:
  206 U0011000000000000 nl:
  207 U0101000000000000 endnum:
  208 1111111100001010
  209 U0000000000000000 nxtchr:
  210 U0011000000000000 numoff:
  211 1010000000000000
  212 1001000000000000
  213 U0110000000000000 nxtdig:
  214 1111011000000000
  215 U0001000000000000 binum:
  216 0000111111111100
  217 0111000000000000
  218 1111100000000000
  219 1111011000000000
  220 U0001000000000000 binum:
  221 0000111111111100
  222 0111000000000000
  223 1111100000000000
  224 1111000000000000
  225 U0010000000000000 one:
  226 U0001000000000000 str:
  227 1111011000000000
  228 U0101000000000000 crnl:
  229 0001111111111110
  230 1111010000000000
  231 U0011000000000000 c255:
  232 U1100000000000000 crnl:
  233 U1110000000000000 sb:
  234 1111110000000001
  235 1111010000000000
  236 U1110000000000000 xbsywt:
  237 1111011000000000
  238 0001111111111110
  239 U1110000000000000 xbsywt:
  240 U0000000000000000 str:
  241 U0110000000000000 nextw:
  242 U0000000000000000 cr:
  243 0001111111111110
  244 U1110000000000000 xbsywt:
  245 U0000000000000000 nl:
  246 0001111111111110
  247 U1110000000000000 xbsywt:
  248 1111100000000000
4096 x
nextw:                  224
crnl:                   242
writeint:                       219
getInput:                       197
nxtdig:                         203
endnum:                         214
rbsywt:                         193
xbsywt:                         189
AddInput:                       0
getInput:                       20
nxtdig:                         26
endnum:                         37
overflow:                       42
convert:                        46
answer:                         53
start:                  67
nextw:                  72
crnl:                   90
xbsywt:                         97
rbsywt:                         101
sb:                     105
loop1:                  106
add1:                   115
finish:                         120
done:                   122
inputString:                    123
resultString:                   146
errorString:                    161
neg1:                   175
zero:                   176
one:                    177
numoff:                         178
c255:                   179
nxtchr:                         180
binum:                  181
sum:                    182
lpcnt:                  183
str:                    184
on:                     185
mask:                   186
nl:                     187
cr:                     188

